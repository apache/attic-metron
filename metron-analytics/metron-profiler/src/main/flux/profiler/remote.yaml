# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "profiler"

config:
    topology.workers: ${profiler.workers}
    topology.acker.executors: ${profiler.executors}
    topology.message.timeout.secs: ${topology.message.timeout.secs}

components:

    -   id: "rowKeyBuilder"
        className: "org.apache.metron.profiler.hbase.SaltyRowKeyBuilder"
        properties:
            - name: "saltDivisor"
              value: ${profiler.hbase.salt.divisor}
        configMethods:
            - name: "withPeriodDuration"
              args: [${profiler.period.duration}, "${profiler.period.duration.units}"]

    -   id: "columnBuilder"
        className: "org.apache.metron.profiler.hbase.ValueOnlyColumnBuilder"
        constructorArgs:
            - "${profiler.hbase.column.family}"

    -   id: "hbaseMapper"
        className: "org.apache.metron.profiler.bolt.ProfileHBaseMapper"
        properties:
            - name: "rowKeyBuilder"
              ref: "rowKeyBuilder"
            - name: "columnBuilder"
              ref: "columnBuilder"

    -   id: "zkHosts"
        className: "org.apache.storm.kafka.ZkHosts"
        constructorArgs:
            - "${kafka.zk}"

    -   id: "kafkaConfig"
        className: "org.apache.metron.common.spout.kafka.SpoutConfig"
        constructorArgs:
            - ref: "zkHosts"              # zookeeper hosts
            - "${profiler.input.topic}"   # topic name
            - ""                          # zk root
            - "profiler"                  # id
        configMethods:
            -   name: "from"
                args: ["${kafka.start}"]

    -   id: "windowDuration"
        className: "org.apache.storm.topology.base.BaseWindowedBolt$Duration"
        constructorArgs:
            - ${profiler.period.duration}
            - "${profiler.period.duration.units}"

    -   id: "eventTimeLag"
        className: "org.apache.storm.topology.base.BaseWindowedBolt$Duration"
        constructorArgs:
            - ${profiler.event.time.lag}
            - "${profiler.event.time.lag.units}"

    -   id: "clock"
        className: "org.apache.metron.profiler.clock.WallClock"

spouts:

    -   id: "kafkaSpout"
        className: "org.apache.storm.kafka.KafkaSpout"
        constructorArgs:
            - ref: "kafkaConfig"

bolts:

    -   id: "splitterBolt"
        className: "org.apache.metron.profiler.bolt.ProfileSplitterBolt"
        configMethods:
            - name: "withZookeeperUrl"
              args: ["${kafka.zk}"]
            - name: "withTimestampField"
              args: ["${profiler.event.timestamp.field}"]
            - name: "withClock"
              args: [ref: "clock"]

    -   id: "builderBolt"
        className: "org.apache.metron.profiler.bolt.ProfileBuilderBolt"
        configMethods:
            - name: "withZookeeperUrl"
              args: ["${kafka.zk}"]
            - name: "withTimeToLive"
              args: [${profiler.ttl}, "${profiler.ttl.units}"]
            - name: "withPeriodDuration"
              args: [${profiler.period.duration}, "${profiler.period.duration.units}"]
            - name: "withTumblingWindow"
              args: [ref: "windowDuration"]
            - name: "withTimestampField"
              args: ["timestamp"]  # field in the tuple where storm gets the timestamp.  this should NEVER need to change.
            - name: "withLag"
              args: [ref: "eventTimeLag"]

    -   id: "hbaseBolt"
        className: "org.apache.metron.hbase.bolt.HBaseBolt"
        constructorArgs:
            - "${profiler.hbase.table}"
            - ref: "hbaseMapper"
        configMethods:
            - name: "withTableProvider"
              args: ["${hbase.provider.impl}"]
            - name: "withBatchSize"
              args: [${profiler.hbase.batch}]
            - name: "withFlushIntervalSecs"
              args: [${profiler.hbase.flush.interval.seconds}]

streams:

    -   name: "spout -> splitter"
        from: "kafkaSpout"
        to: "splitterBolt"
        grouping:
            type: SHUFFLE

    -   name: "splitter -> builder"
        from: "splitterBolt"
        to: "builderBolt"
        grouping:
            type: FIELDS
            args: ["entity", "profile"]

    -   name: "builder -> hbase"
        from: "builderBolt"
        to: "hbaseBolt"
        grouping:
            type: SHUFFLE